{"ast":null,"code":"var _jsxFileName = \"/workspace/photogram-react/photogram/src/services/authentication/authentication.context.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthenticationContext = /*#__PURE__*/createContext();\nexport const AuthenticationContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState(false);\n\n  function loginRequest(credentials) {\n    // Example POST method implementation:\n    async function postData() {\n      let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      // Default options are marked with *\n      const response = await fetch(url, {\n        method: 'POST',\n        // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors',\n        // no-cors, *cors, same-origin\n        cache: 'no-cache',\n        // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin',\n        // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n        },\n        redirect: 'follow',\n        // manual, *follow, error\n        referrerPolicy: 'no-referrer',\n        // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n      });\n      return response.json(); // parses JSON response into native JavaScript objects\n    }\n\n    postData('https://example.com/answer', {\n      answer: 42\n    }).then(data => {\n      console.log(data); // JSON data parsed by `data.json()` call\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(AuthenticationContext.Provider, {\n    value: {\n      isAuthenticated: !!currentUser,\n      currentUser,\n      loginRequest\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthenticationContextProvider, \"he77ftybFXpIkm1JqU6iI1tthbg=\");\n\n_c = AuthenticationContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticationContextProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","AuthenticationContext","AuthenticationContextProvider","children","currentUser","setCurrentUser","loginRequest","credentials","postData","url","data","response","fetch","method","mode","cache","headers","redirect","referrerPolicy","body","JSON","stringify","json","answer","then","console","log","isAuthenticated"],"sources":["/workspace/photogram-react/photogram/src/services/authentication/authentication.context.js"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n\nexport const AuthenticationContext = createContext();\n\nexport const AuthenticationContextProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(false);\n    \n    function loginRequest(credentials) { \n        // Example POST method implementation:\nasync function postData(url = '', data = {}) {\n    // Default options are marked with *\n    const response = await fetch(url, {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json'\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: 'follow', // manual, *follow, error\n      referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n    });\n    return response.json(); // parses JSON response into native JavaScript objects\n  }\n  \n  postData('https://example.com/answer', { answer: 42 })\n    .then(data => {\n      console.log(data); // JSON data parsed by `data.json()` call\n    });\n         \n        \n    };\n    \n    return (\n        <AuthenticationContext.Provider\n            value={{\n                isAuthenticated: !!currentUser,\n                currentUser, \n                loginRequest \n            }}\n        >\n            {children}\n        </AuthenticationContext.Provider>        \n    );\n};"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;;AAEA,OAAO,MAAMC,qBAAqB,gBAAGH,aAAa,EAA3C;AAEP,OAAO,MAAMI,6BAA6B,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC3D,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,KAAD,CAA9C;;EAEA,SAASM,YAAT,CAAsBC,WAAtB,EAAmC;IAC/B;IACR,eAAeC,QAAf,GAA6C;MAAA,IAArBC,GAAqB,uEAAf,EAAe;MAAA,IAAXC,IAAW,uEAAJ,EAAI;MACzC;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;QAChCI,MAAM,EAAE,MADwB;QAChB;QAChBC,IAAI,EAAE,MAF0B;QAElB;QACdC,KAAK,EAAE,UAHyB;QAGb;QACnBR,WAAW,EAAE,aAJmB;QAIJ;QAC5BS,OAAO,EAAE;UACP,gBAAgB,kBADT,CAEP;;QAFO,CALuB;QAShCC,QAAQ,EAAE,QATsB;QASZ;QACpBC,cAAc,EAAE,aAVgB;QAUD;QAC/BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf,CAX0B,CAWL;;MAXK,CAAN,CAA5B;MAaA,OAAOC,QAAQ,CAACW,IAAT,EAAP,CAfyC,CAejB;IACzB;;IAEDd,QAAQ,CAAC,4BAAD,EAA+B;MAAEe,MAAM,EAAE;IAAV,CAA/B,CAAR,CACGC,IADH,CACQd,IAAI,IAAI;MACZe,OAAO,CAACC,GAAR,CAAYhB,IAAZ,EADY,CACO;IACpB,CAHH;EAMG;;EAAA;EAED,oBACI,QAAC,qBAAD,CAAuB,QAAvB;IACI,KAAK,EAAE;MACHiB,eAAe,EAAE,CAAC,CAACvB,WADhB;MAEHA,WAFG;MAGHE;IAHG,CADX;IAAA,UAOKH;EAPL;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CA1CM;;GAAMD,6B;;KAAAA,6B"},"metadata":{},"sourceType":"module"}